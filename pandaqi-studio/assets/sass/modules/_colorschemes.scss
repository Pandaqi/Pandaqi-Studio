@use "sass:map";
@use "sass:list";
@use "./globals" as g;


@each $name, $color in g.$colorschemes 
{
	.#{$name} 
	{
		--palette-bg: #{map.get($color, "bg")};
		--palette-color: #{map.get($color, "col")};
		--palette-bg-rules: #{map.get($color, "bg-rules")};
		--palette-white: #EDEDED;
		--palette-black: #111111;

		@if(map.get($color, "invert")) {
			--palette-link: #{map.get($color, "bg")};
			--palette-link-invert: #{map.get($color, "col")};
			--palette-color-rules: #{map.get($color, "bg")};
		} @else {
			--palette-link: #{map.get($color, "col")};
			--palette-link-invert: #{map.get($color, "bg")};
			--palette-color-rules: #{map.get($color, "col")};
		}
	}
}


@mixin colorscheme() 
{
	background-color: var(--palette-bg);
	color: var(--palette-color);

	h1 {
		color: var(--palette-color);
	}

	a {
		color: var(--palette-bg);
	}

    a.masked-link, button.masked-link {
        color: var(--palette-bg);
        background-color:  var(--palette-color);
    }
}

@mixin inverted-colorscheme() {
	background-color: var(--palette-color);
	color: var(--palette-bg);

	h1 {
		color: var(--palette-bg);
	}

	a {
		color: var(--palette-bg);
	}

    a.masked-link, button.masked-link {
        color: var(--palette-color);
        background-color: var(--palette-bg);
    }
}

@mixin banner-colorscheme() 
{
	background-color: var(--palette-color);
	color: var(--palette-white);

	a {
		color: var(--palette-white);
	}

	div.btn {
        color: var(--palette-color) !important;
        background-color: var(--palette-bg) !important;
		border-color: var(--palette-color) !important;
    }
}

// @NOTE: the CUSTOM entry banners still use the regular color scheme, because they have no background blurry thing
.metadata-container, header, .metadata-divider {
	@include colorscheme();
}

