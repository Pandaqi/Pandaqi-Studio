(()=>{var t=class{constructor(e={}){this.x=e.x||0,this.y=e.y||0}clone(){return new t(this)}round(){return this.setXY(Math.round(this.x),Math.round(this.y))}setX(e=0){return this.x=e,this}setY(e=0){return this.y=e,this}fromXY(e,t){return this.setXY(e,t)}setXY(e,t){return this.set({x:e,y:t})}setFactor(e){return this.setXY(e,e)}set(e=new t){return this.setX(e.x),this.setY(e.y),this}moveX(e=0){return this.setX(this.x+e)}moveY(e=0){return this.setY(this.y+e)}moveXY(e,t){return this.move({x:e,y:t})}moveFactor(e){return this.moveXY(e,e)}add(e=new t){return this.move(e)}sub(e=new t){return this.add(e.clone().scaleFactor(-1))}move(e=new t){return this.moveX(e.x),this.moveY(e.y),this}scaleX(e=0){return this.setX(e*this.x)}scaleY(e=0){return this.setY(e*this.y)}scaleXY(e,t){return this.scale({x:e,y:t})}scaleFactor(e){return this.scaleXY(e,e)}scale(e=new t){return this.scaleX(e.x),this.scaleY(e.y),this}angle(){return Math.atan2(this.y,this.x)}negate(){return this.scaleFactor(-1)}normalize(){const e=this.length();return Math.abs(e)<=1e-4?this:this.scaleFactor(1/e)}random(){const e=Math.random()*2*Math.PI;return(new t).setXY(Math.cos(e),Math.sin(e))}clamp(e=new t,n=new t){return this.setX(Math.min(Math.max(this.x,e.x),n.x)),this.setY(Math.min(Math.max(this.y,e.y),n.y)),this}length(){return Math.sqrt(this.lengthSquared())}lengthSquared(){return Math.pow(this.x,2)+Math.pow(this.y,2)}distTo(e=new t){return Math.sqrt(this.distSquaredTo(e))}distSquaredTo(e=new t){return Math.pow(this.x-e.x,2)+Math.pow(this.y-e.y,2)}vecTo(e=new t){return(new t).setXY(e.x-this.x,e.y-this.y)}},n=class{constructor(e=1,t=1,n=1,s=1){this.r=e,this.g=t,this.b=n,this.a=s}clone(){return new n(this.r,this.g,this.b,this.a)}clamp(e){return Math.min(Math.max(e,0),1)}componentToHex(e){var t=Math.round(e*255).toString(16);return t.length==1?"0"+t:t}toHex(){return"#"+this.componentToHex(this.r)+this.componentToHex(this.g)+this.componentToHex(this.b)}fromHex(e){const t=this.convertHexToRgb(e);return this.setChannel("r",t.r/255),this.setChannel("g",t.b/255),this.setChannel("b",t.b/255),this}convertHexToRgb(e){var t=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);return t?{r:parseInt(t[1],16),g:parseInt(t[2],16),b:parseInt(t[3],16)}:null}toString(){return"rgba("+this.r*255+", "+this.g*255+", "+this.b*255+", "+this.a+")"}getChannel(e){return this[e]}setChannel(e,t){return this[e]=t,this}setAlpha(e){return this.a=this.clamp(e),this}distanceTo(e){const t=Math.abs(this.r-e.r),n=Math.abs(this.g-e.g),s=Math.abs(this.b-e.b),o=Math.abs(this.a-e.a);return(t+n+s+o)/4}},c=class{constructor(){this.RADIUS_BOUNDS={min:1,max:72},this.MAX_UNDO=15,this.MAX_DIFFERENCE_FOR_FLOOD_FILL=.15,this.PEN_TOOL_STEP_SIZE=2,this.BRUSH_TOOL_STEP_SIZE=1,this.DEFAULT_BRUSH_PARAMS={radius:15,hardness:.5,opacity:1,color:new n(1,.5,.5)},this.DEFAULT_TOOL="pen",this.toolTooltips={pen:"Pen Tool | Paint new strokes with hard, precise brush",brush:"Brush Tool | Paint new strokes with soft brush",eraser:"Eraser Tool | Erase parts of the existing painting",picker:"Picker Tool | Click in the image to select the color at that pixel",fill:"Fill Tool | Click to fill an entire (enclosed) area with a single color",smudge:"Smudge Tool | Click and drag to mix/blend two colors"},this.createEventNode()}clamp(e,t){return Math.min(Math.max(e,t.min),t.max)}createEventNode(){this.eventNode=document.createElement("div")}dispatchEvent(e,t){const n=new CustomEvent(e,{detail:t});this.eventNode.dispatchEvent(n)}addEventListener(e,t){this.eventNode.addEventListener(e,e=>{t(e)})}},e=new c,r=class{constructor(){const t=e.DEFAULT_BRUSH_PARAMS;this.radius=t.radius,this.hardness=t.hardness,this.channelOrder=["r","g","b","a"],this.opacity=t.opacity,this.color=t.color.clone(),this.canvasDirty=!0,this.canvasCached=null,this.canvasSmudgeCached=null,this.gradientCached=null}onChange(){this.canvasDirty=!0,this.regenerateCanvas(),this.dispatchChangeEvent()}dispatchChangeEvent(){e.dispatchEvent("brushChanged",{brush:this})}createCanvas(){const e=document.createElement("canvas");return e.width=this.radius*2,e.height=this.radius*2,e}regenerateCanvas(){if(!this.canvasDirty)return;this.canvasCached=this.createCanvas(),this.generateCanvas(),this.canvasSmudgeCached=this.createCanvas();const e=this.createFeatherGradient(this.canvasSmudgeCached);this.gradientCached=e,this.canvasDirty=!1}getAlphaFalloff(e){const s=Math.sqrt(Math.pow(e.x-this.radius,2)+Math.pow(e.y-this.radius,2)),t=s/this.radius;if(t<0||t>1)return-1;const n=this.opacity,o=this.hardness*this.opacity;let i=t;const a=n+i*(o-n);return a}generateCanvas(){const e=this.canvasCached.getContext("2d");for(let n=0;n<this.radius*2;n++)for(let s=0;s<this.radius*2;s++){const o=(new t).setXY(n,s),i=this.getAlphaFalloff(o),r=i<0;if(r)continue;const a=this.color.clone();a.setAlpha(i),this.setCanvasPixel(e,o,a)}}getPreviewCanvas(){const t=this.createCanvas(),n=2*e.RADIUS_BOUNDS.max;t.width=n,t.height=n,t.classList.add("brush-preview-canvas");let s=this.getImage();const o=t.getContext("2d");return o.drawImage(s,.5*n-.5*s.width,.5*n-.5*s.height),t}getSmudgeImage(){return this.canvasSmudgeCached}getImage(){return this.canvasCached}getOpacity(){return this.opacity}setOpacity(e){this.opacity=e,this.onChange()}getHardness(){return this.hardness}setHardness(e){this.hardness=e,this.onChange()}getSize(){return this.radius}setSize(t){this.radius=e.clamp(t,e.RADIUS_BOUNDS),this.onChange()}getColor(){return this.color}getColorWithOpacity(){const e=this.color.clone();return e.setAlpha(this.opacity),e}setColor(e){this.color=e,this.onChange()}getColorChannel(e){return this.color.getChannel(e)}setColorChannel(e,t){this.color.setChannel(e,t),this.onChange()}fillPixelListRaw(e,t){const n=this.getColorWithOpacity();for(const s of t){const o=this.getPixelID(e,s);this.setRawPixel(e,o,n)}}setCanvasPixel(e,t,n){e.fillStyle=n.toString(),e.fillRect(t.x,t.y,1,1)}setRawPixel(e,t,n){this.setPixelChannel(e,t,"r",n.r),this.setPixelChannel(e,t,"g",n.g),this.setPixelChannel(e,t,"b",n.b),this.setPixelChannel(e,t,"a",n.a)}setPixelChannel(e,t,n,s){const o=t+this.channelOrder.indexOf(n);e.data[o]=Math.round(s*255)}getNumChannels(){return this.channelOrder.length}getPixelID(e,t){return(t.y*e.width+t.x)*this.getNumChannels()}offsetPointForDrawing(e){return e.clone().move((new t).setXY(-this.radius,-this.radius))}getIdealDrawInterpolationSize(){return Math.max(Math.round(this.radius*.1),1)}interpolateBetweenPoints(e,t,n=1,s=!0,o=!0){if(!e)return[t.clone()];if(!t)return[e.clone()];const a=e.clone().vecTo(t),l=a.clone().normalize().scaleFactor(n),d=a.length(),c=Math.ceil(a.length()/n);if(d<=1)return[t.clone()];let i=e.clone();const r=[];s&&r.push(i.clone());for(let e=0;e<c;e++){i.move(l);const n=e==c-1;n&&o&&(i=t.clone()),r.push(i.clone())}return r}updateSmudgeCanvas(e,t){const n=this.canvasSmudgeCached,s=n.getContext("2d");s.clearRect(0,0,n.width,n.height),s.drawImage(t,e.x-.5*n.width,e.y-.5*n.height,n.width,n.height,0,0,n.width,n.height),s.save(),s.fillStyle=this.gradientCached,s.globalCompositeOperation="destination-out",s.translate(.5*n.width,.5*n.height),s.fillRect(-.5*n.width,-.5*n.height,n.width,n.height),s.restore()}createFeatherGradient(e){const n=e.getContext("2d"),s=Math.min(this.radius*this.hardness,this.radius-1),t=n.createRadialGradient(0,0,s,0,0,this.radius);return t.addColorStop(0,"rgba(0, 0, 0, 0)"),t.addColorStop(1,"rgba(0, 0, 0, 1)"),t}},a=class{constructor(e){this.pqPaint=e,this.drawing=!1,this.lastDrawPos=null,this.canvasResolution={width:1280,height:720},this.drawBuffer=[],this.drawCanvas=null,this.createCanvasElements(),this.attachMouseEvents(),this.listenForSignals(),this.pqPaint.pushState(this.cloneState())}download(){var e=document.createElement("a");e.download="[Pandaqi Paint] Canvas.png",e.href=this.canvasOutput.toDataURL(),e.click()}getSize(){return this.canvasResolution}getCanvasOutput(){return this.canvasOutput}getContextOutput(){return this.contextOutput}getContextActive(){return this.contextActive}createCanvasElement(){const e=document.createElement("canvas");return e.width=this.canvasResolution.width,e.height=this.canvasResolution.height,e}createCanvasElements(){let e=this.createCanvasElement();this.pqPaint.getContainerNode().appendChild(e),e.style.width="100%",e.classList.add("paint-canvas");const t={willReadFrequently:!0,imageSmoothingEnabled:!0};this.canvasOutput=e,this.contextOutput=e.getContext("2d",t),this.clearCanvas(this.canvasOutput,!0),this.canvasCurrent=this.createCanvasElement(),this.contextCurrent=this.canvasCurrent.getContext("2d",t),this.canvasActive=this.createCanvasElement(),this.contextActive=this.canvasActive.getContext("2d",t)}listenForSignals(){e.addEventListener("toolChanged",e=>{this.canvasOutput.style.cursor=e.detail.tool.cursor})}attachMouseEvents(){const e=this.canvasOutput;e.addEventListener("mousedown",this.onDrawStart.bind(this),!0),e.addEventListener("touchstart",this.onDrawStart.bind(this),!0),e.addEventListener("mousemove",this.onDrawProgress.bind(this),!0),e.addEventListener("touchmove",this.onDrawProgress.bind(this),!0),e.addEventListener("mouseup",this.onDrawEnd.bind(this),!0),e.addEventListener("touchend",this.onDrawEnd.bind(this),!0),e.addEventListener("mouseleave",this.onDrawCancel.bind(this),!0),e.addEventListener("touchcancel",this.onDrawCancel.bind(this),!0)}getPosFromEvent(e){if(!e)return this.lastDrawPos;const n=new t,s=this.canvasOutput.getBoundingClientRect();if(n.move({x:-s.left,y:-s.top}),e.type=="touchstart"||e.type=="touchmove"||e.type=="touchend"||e.type=="touchcancel"){var o=typeof e.originalEvent=="undefined"?e:e.originalEvent,i=o.touches[0]||o.changedTouches[0];n.move({x:i.clientX,y:i.clientY})}else(e.type=="mousedown"||e.type=="mouseup"||e.type=="mousemove"||e.type=="mouseover"||e.type=="mouseout"||e.type=="mouseenter"||e.type=="mouseleave")&&n.move({x:e.clientX,y:e.clientY});const a=this.convertRealPosToCanvasPos(n);return a}collectToolParams(e){return{pos:this.getPosFromEvent(e),lastDrawPos:this.lastDrawPos,pqPaint:this.pqPaint}}cancelEvents(e){return!!e&&(e.preventDefault(),e.stopPropagation(),!1)}onDrawStart(t){if(this.drawing)return;this.drawing=!0;const n=this.getPosFromEvent(t);return this.lastDrawPos=n.clone(),e.dispatchEvent("drawStart",{params:this.collectToolParams(t)}),this.cancelEvents(t)}onDrawProgress(t){if(!this.drawing)return;const n=this.collectToolParams(t);return e.dispatchEvent("drawProgress",{params:n}),this.lastDrawPos=n.pos.clone(),this.cancelEvents(t)}onDrawEnd(t){if(!this.drawing)return;return e.dispatchEvent("drawEnd",{params:this.collectToolParams(t)}),this.drawing=!1,this.lastDrawPos=null,this.cancelEvents(t)}onDrawCancel(){if(!this.drawing)return;this.onDrawEnd(null)}clearCanvas(e,t=!1){const n=e.getContext("2d");n.clearRect(0,0,this.canvasResolution.width,this.canvasResolution.height),t&&(n.fillStyle="#FFFFFF",n.fillRect(0,0,e.width,e.height))}setStateTo(e){this.clearCanvas(this.canvasCurrent),this.contextCurrent.drawImage(e,0,0),this.refreshOutput(!1)}cloneState(){const e=document.createElement("canvas");return e.width=this.canvasOutput.width,e.height=this.canvasOutput.height,e.getContext("2d").drawImage(this.canvasOutput,0,0),e}clearOutput(){this.clearCanvas(this.canvasCurrent),this.clearCanvas(this.canvasActive),this.refreshOutput()}refreshOutput(e=!0){this.clearCanvas(this.canvasOutput,!0),this.contextOutput.drawImage(this.canvasCurrent,0,0),this.drawActiveCanvasOnto(this.canvasOutput),e&&this.pqPaint.pushState(this.cloneState())}drawActiveCanvasOnto(e){const t=e.getContext("2d");t.save(),t.globalCompositeOperation=this.pqPaint.getTools().getCompositeOperation(),t.drawImage(this.canvasActive,0,0),t.restore()}commitCanvasActive(){this.drawActiveCanvasOnto(this.canvasCurrent),this.clearCanvas(this.canvasActive),this.clearCanvas(this.canvasOutput,!0),this.refreshOutput()}drawOnActiveCanvas(e){e.clearBefore&&this.clearCanvas(this.canvasActive);const n=e.canvas,t=this.contextActive;if(t.globalAlpha=e.alpha,t.globalCompositeOperation=e.composite,e.usesImage())for(const s of e.getPoints())t.drawImage(n,s.x,s.y);if(e.usesVector()){const n=e.getLineSettings(),s=new Path2D;for(const t of e.getPoints())s.lineTo(t.x,t.y);t.strokeStyle=n.color,t.lineWidth=n.lineWidth,t.stroke(s)}this.refreshOutput(e.saveStateAfterwards)}convertRealPosToCanvasPos(e){const n=this.canvasOutput.getBoundingClientRect(),s=this.canvasResolution,o=(new t).setXY(s.width/n.width,s.height/n.height);return e.clone().scale(o)}convertCanvasPosToRealPos(e){const n=this.canvasOutput.getBoundingClientRect(),s=this.canvasResolution,o=(new t).setXY(n.width/s.width,n.height/s.height);return e.clone().scale(o)}readColorAt(e){const t=this.contextOutput.getImageData(e.x,e.y,1,1).data,s=new n(t[0]/255,t[1]/255,t[2]/255,t[3]/255);return s}},i=class{constructor(e){this.pqPaint=e,this.createHTML()}createHTML(){const e=document.createElement("div");e.classList.add("paint-interface"),this.pqPaint.getContainerNode().appendChild(e),this.node=e,this.createToolSet(),this.createButtons(),this.createColorPicker(),this.createBrushProperties()}createButton(e){const t=document.createElement("button");t.innerHTML=e.text,t.title=e.title,t.dataset.label=e.text.toLowerCase();const n=e.node||this.node;n.appendChild(t);const s=e.callback;t.addEventListener("click",e=>{s()})}createButtons(){const t=document.createElement("div");t.classList.add("paint-buttons"),this.node.appendChild(t);const e={text:"Clear",node:t,title:"Clears the entire canvas",callback:()=>{this.pqPaint.getCanvas().clearOutput()}},n=this.createButton(e);e.text="Download",e.title="Download the current painting as an image file",e.callback=()=>{this.pqPaint.getCanvas().download()};const s=this.createButton(e);e.text="Undo",e.callback=()=>{this.pqPaint.undo()},e.title="Undo the last change";const o=this.createButton(e)}createToolSet(){const t=document.createElement("div");t.classList.add("tool-set"),this.node.appendChild(t);const n=this.pqPaint.getTools(),s=Object.keys(n.getDictionary()),o={node:t,values:s,titles:e.toolTooltips,valueDefault:n.getSelectedName(),callback:e=>{this.pqPaint.getTools().setTo(e)}};this.createRadioButtons(o)}createColorPicker(){const o=document.createElement("div");o.classList.add("color-picker"),this.node.appendChild(o);const s=document.createElement("input");s.type="color",s.title="Click this to select a new color",o.appendChild(s),s.addEventListener("input",e=>{const t=(new n).fromHex(s.value);this.pqPaint.getBrush().setColor(t)}),e.addEventListener("brushChanged",e=>{s.value=e.detail.brush.getColor().toHex()});const i=document.createElement("div");i.classList.add("color-picker-sliders"),o.appendChild(i);const t={node:i,label:"Red",title:"Change the color's amount of red",value:this.pqPaint.getBrush().getColorChannel("r"),callback:e=>{this.pqPaint.getBrush().setColorChannel("r",e)}};this.createSlider(t),t.label="Green",t.title="Change the color's amount of green",t.value=this.pqPaint.getBrush().getColorChannel("g"),t.callback=e=>{this.pqPaint.getBrush().setColorChannel("g",e)},this.createSlider(t),t.label="Blue",t.title="Change the color's amount of blue",t.value=this.pqPaint.getBrush().getColorChannel("b"),t.callback=e=>{this.pqPaint.getBrush().setColorChannel("b",e)},this.createSlider(t)}createBrushProperties(){const s=document.createElement("div");s.classList.add("brush-properties"),this.node.appendChild(s);const n=document.createElement("div");n.classList.add("brush-preview"),n.title="A preview of what the currently selected brush looks like",s.appendChild(n),this.brushPreview=n,e.addEventListener("brushChanged",e=>{n.innerHTML="";const t=e.detail.brush;n.appendChild(t.getPreviewCanvas())});const o=document.createElement("div");s.appendChild(o);const t={node:o,label:"Opacity",title:"Modify how transparent the brush is",value:this.pqPaint.getBrush().getOpacity(),callback:e=>{this.pqPaint.getBrush().setOpacity(e)}};this.createSlider(t),t.label="Hardness",t.title="Modify how hard the edges of the brush are",t.value=this.pqPaint.getBrush().getHardness(),t.callback=e=>{this.pqPaint.getBrush().setHardness(e)},this.createSlider(t),t.label="Size",t.callback=e=>{this.pqPaint.getBrush().setSize(e)},t.title="Modify the brush size",t.min=e.RADIUS_BOUNDS.min,t.max=e.RADIUS_BOUNDS.max,t.step=1,t.value=this.pqPaint.getBrush().getSize(),this.createSlider(t)}createSlider(e={}){const o=e.node||this.node,n=document.createElement("div");o.appendChild(n),n.classList.add("slider-input"),n.dataset.label=e.label.toLowerCase(),n.title=e.title;const s=document.createElement("label");n.appendChild(s),s.innerHTML=e.label||"Label";const t=document.createElement("input");n.appendChild(t),t.type="range",t.min=e.min??0,t.max=e.max??1,t.step=e.step||.05;const i=.5*(parseFloat(t.min)+parseFloat(t.max));t.value=e.value??i;const a=e=>{},r=e.callback||a;t.addEventListener("input",e=>{r(parseFloat(t.value))});const c=new Event("input");t.dispatchEvent(c)}humanize(e){return e.slice(0,1).toUpperCase()+e.slice(1)}createRadioButtons(e){const t=e.values,n=[];e.allNodes=n;const o=e.valueDefault??t[0];let s=-1;for(let i=0;i<t.length;i++){const a=t[i];e.value=this.humanize(a),e.title=e.titles[a],n.push(this.createRadioButton(e)),a==o&&(s=i)}const i=n[s];this.fakeClickButton(i)}createRadioButton(e){const s=e.node||this.node,n=e.value,t=document.createElement("button");return t.innerHTML=n,t.dataset.label=n.toLowerCase(),t.title=e.title,s.appendChild(t),t.addEventListener("click",s=>{this.changeRadioButton(t,!0);for(const n of e.allNodes){const s=n==t;if(s)continue;this.changeRadioButton(n,!1)}e.callback(n)}),t}changeRadioButton(e,t){const n=t?"toggled":"";e.dataset.toggled=n}fakeClickButton(e){const t=new Event("click");e.dispatchEvent(t)}},o=class{constructor(){this.alpha=1,this.canvas=null,this.composite="source-over",this.points=[],this.clearBefore=!1,this.saveStateAfterwards=!1,this.lineSettings={color:null,lineWidth:null}}usesImage(){return this.canvas!=null}usesVector(){return this.canvas==null}getLineSettings(){return this.lineSettings}setLineSettings(e,t){this.lineSettings.color=e,this.lineSettings.lineWidth=t}getPoints(){return this.points}addPoint(e){this.points.push(e)}},s=class{constructor(){this.drawCanvas=null,this.cursor="pointer",this.compositeOperation="source-over"}onDrawStart(e){this.points=[],this.drawCanvas=e.pqPaint.getBrush().getImage(),this.drawAt(e)}onDrawProgress(e){this.drawAt(e)}onDrawEnd(e){e.pqPaint.getCanvas().commitCanvasActive(),this.drawCanvas=null,this.points=[]}drawAt(e){this.points.push(e);const t=e.pqPaint.getBrush(),n=this.getSmoothPointList(t),s=this.createCanvasOperation(t,n);e.pqPaint.getCanvas().drawOnActiveCanvas(s)}getSmoothPointList(){const t=[];let n=null;for(const e of this.points)t.push(e.pos),n=e.pos;return t}createCanvasOperation(t,n){const s=new o;s.alpha=t.getOpacity(),s.composite=this.compositeOperation,s.canvas=this.drawCanvas,s.clearBefore=!0;let i=null;const a=e.BRUSH_TOOL_STEP_SIZE;for(const e of n){const o=t.interpolateBetweenPoints(i,e,a);for(const e of o){const n=t.offsetPointForDrawing(e);s.addPoint(n)}i=e}return s}},l=class{constructor(){this.cursor="pointer",this.eraser=!0}onDrawStart(e){this.brushTool=new s,this.brushTool.onDrawStart(e)}onDrawProgress(e){this.brushTool.onDrawProgress(e)}onDrawEnd(e){this.brushTool.onDrawEnd(e)}},d=class{constructor(){this.cursor="crosshair"}onDrawStart(e){this.readAndSetColor(e)}onDrawProgress(e){this.readAndSetColor(e)}onDrawEnd(e){this.readAndSetColor(e)}readAndSetColor(e){const t=e.pqPaint.getCanvas().readColorAt(e.pos);e.pqPaint.getBrush().setColor(t)}},u=class{constructor(){this.cursor="cell",this.neighborOffsets=[(new t).setXY(1,0),(new t).setXY(0,1),(new t).setXY(-1,0),(new t).setXY(0,-1)]}onDrawStart(){}onDrawProgress(){}onDrawEnd(e){this.floodFill(e)}floodFill(t){const r=t.pos.clone().round(),s=t.pqPaint.getCanvas(),l=s.getContextOutput(),d=s.getContextActive(),o=s.getSize(),u=s.readColorAt(r),a=[r],c=[],n=[];for(let e=0;e<o.width;e++){n[e]=[];for(let t=0;t<o.height;t++)n[e][t]=null}const i=l.getImageData(0,0,o.width,o.height);for(;a.length>0;){const t=a.pop(),r=n[t.x][t.y],s=r??this.getPixelRaw(i,t);n[t.x][t.y]=s;const l=this.colorsTooFarApart(u,s,e.MAX_DIFFERENCE_FOR_FLOOD_FILL);if(l)continue;c.push(t);const d=this.getNeighbors(t,o);for(const e of d){const t=n[e.x][e.y];if(t)continue;a.push(e),n[e.x][e.y]=this.getPixelRaw(i,e)}}const h=t.pqPaint.getBrush();h.fillPixelListRaw(i,c),d.putImageData(i,0,0),s.commitCanvasActive()}colorsTooFarApart(e,t,n){return Math.abs(e.r-t[0]/255)>n||Math.abs(e.g-t[1]/255)>n||Math.abs(e.b-t[2]/255)>n}getPixelRaw(e,t){const n=(t.y*e.width+t.x)*4;return e.data.slice(n,n+4)}outOfBounds(e,t){return e.x<0||e.y<0||e.x>=t.width||e.y>=t.height}getNeighbors(e,t){const n=[];for(let s=0;s<4;s++){const o=e.clone();if(o.move(this.neighborOffsets[s]),this.outOfBounds(o,t))continue;n.push(o.round())}return n}},h=class{constructor(){this.cursor="pointer",this.compositeOperation="source-over"}onDrawStart(e){this.points=[],this.drawAt(e)}onDrawProgress(e){this.points.push(e),this.drawAt(e)}onDrawEnd(e){e.pqPaint.getCanvas().commitCanvasActive(),this.points=[]}drawAt(e){const t=e.pqPaint.getBrush(),n=this.getSmoothPointList(t),s=this.createCanvasOperation(t,n);e.pqPaint.getCanvas().drawOnActiveCanvas(s)}getSmoothPointList(e){const n=[];let t=null;for(const s of this.points){const o=t?s.pos.distTo(t):1/0;if(o<=e.getIdealDrawInterpolationSize())continue;n.push(s.pos),t=s.pos}return n}createCanvasOperation(t,n){const s=new o;s.alpha=t.getOpacity(),s.composite=this.compositeOperation,s.clearBefore=!0,s.setLineSettings(t.getColor(),2*t.getSize());let i=null;const a=e.PEN_TOOL_STEP_SIZE;for(const e of n){const o=t.interpolateBetweenPoints(i,e,a);for(const e of o)s.addPoint(e);i=e}return s}},m=class{constructor(){this.toolSelected=e.DEFAULT_TOOL,this.tools={pen:new h,brush:new s,eraser:new l,picker:new d,fill:new u},this.listenForSignals()}listenForSignals(){e.addEventListener("drawStart",e=>{this.getSelected().onDrawStart(e.detail.params)}),e.addEventListener("drawProgress",e=>{this.getSelected().onDrawProgress(e.detail.params)}),e.addEventListener("drawEnd",e=>{this.getSelected().onDrawEnd(e.detail.params)})}toolExists(e){return Object.keys(this.tools).includes(e)}setTo(t){if(t=t.toLowerCase(),!this.toolExists(t))return console.error("No tool exists with name",t);this.toolSelected=t,e.dispatchEvent("toolChanged",{tool:this.getSelected()})}getDictionary(){return this.tools}getSelectedName(){return this.toolSelected}getSelected(){return this.tools[this.toolSelected]}getCompositeOperation(){return this.getSelected().eraser?"destination-out":"source-over"}},f=class{constructor(e){this.node=e,this.brush=new r,this.tools=new m,this.history=[],this.createCanvas(),this.createInterface()}getContainerNode(){return this.node}getBrush(){return this.brush}getTools(){return this.tools}getCanvas(){return this.canvas}createCanvas(){this.canvas=new a(this)}getInterface(){return this.interface}createInterface(){this.interface=new i(this)}undo(){this.popState()}pushState(t){this.history.push(t),this.history.length>=e.MAX_UNDO&&this.history.shift()}popState(){if(this.history.length<=1)return;this.history.pop();const e=this.history[this.history.length-1];this.getCanvas().setStateTo(e)}};window.addEventListener("load",function(){const e=[],t=document.getElementsByClassName("pandaqi-paint");for(const n of t)e.push(new f(n));window.PQ_PAINT={nodes:e}})})()